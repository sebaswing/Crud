{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { Vacunador } from '../Modelo/Vacunador';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/vacunatorio.service\";\nimport * as i2 from \"@angular/material/dialog\";\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n\n}\nexport let AgregarVacunadorComponent = /*#__PURE__*/(() => {\n  class AgregarVacunadorComponent {\n    constructor(_usuarioService, dialogRef) {\n      this._usuarioService = _usuarioService;\n      this.dialogRef = dialogRef;\n      this.emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n      this.nombreFormControl = new FormControl('', [Validators.required]);\n      this.apellidoFormControl = new FormControl('', [Validators.required]);\n      this.dniFormControl = new FormControl('', [Validators.required, Validators.pattern(/^[0-9]\\d*$/)]);\n      this.fechaFormControl = new FormControl('', [Validators.required]);\n      this.zonaFormControl = new FormControl('', [Validators.required]);\n      this.matcher = new MyErrorStateMatcher();\n    }\n\n    ngOnInit() {}\n\n    crearVacunador() {\n      //Verificar que esten todos los valores para CREAR!!\n      if (this.emailFormControl.valid && this.nombreFormControl.valid && this.apellidoFormControl.valid && this.dniFormControl.valid && this.fechaFormControl.valid && this.zonaFormControl.valid) {\n        this.nuevoVacunador = new Vacunador();\n        this.nuevoVacunador.apellido = this.apellidoFormControl.value;\n        this.nuevoVacunador.nombre = this.nombreFormControl.value;\n        this.nuevoVacunador.email = this.emailFormControl.value;\n        this.nuevoVacunador.dni = this.dniFormControl.value;\n        let wzona = {\n          nombre: this.zonaFormControl.value,\n          fechaAplicacion: \"12/3/2022\"\n        };\n        this.nuevoVacunador.centro_vacunatorio = 1;\n\n        this._usuarioService.agregarVacunador(this.nuevoVacunador);\n\n        this.dialogRef.close(true);\n      }\n    }\n\n  }\n\n  AgregarVacunadorComponent.ɵfac = function AgregarVacunadorComponent_Factory(t) {\n    return new (t || AgregarVacunadorComponent)(i0.ɵɵdirectiveInject(i1.VacunatorioService), i0.ɵɵdirectiveInject(i2.MatDialogRef));\n  };\n\n  AgregarVacunadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AgregarVacunadorComponent,\n    selectors: [[\"app-agregar-vacunador\"]],\n    decls: 0,\n    vars: 0,\n    template: function AgregarVacunadorComponent_Template(rf, ctx) {},\n    styles: [\".example-form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%}.example-full-width[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return AgregarVacunadorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}