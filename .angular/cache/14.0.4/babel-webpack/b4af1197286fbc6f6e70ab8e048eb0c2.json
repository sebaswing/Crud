{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction PerfilPacienteComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Ingrese un formato de email v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_hint_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 15);\n    i0.ɵɵtext(1, \" el email que quiere modificar ya existe. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" la constrase\\u00F1a debe ser mayor a 6 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Contrase\\u00F1a requerida. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" la constrase\\u00F1a debe ser mayor a 6 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Contrase\\u00F1a requerida. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_hint_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 15);\n    i0.ɵɵtext(1, \" las contrase\\u00F1as no son iguales \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PerfilPacienteComponent_mat_error_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Campo zona requerida. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let PerfilPacienteComponent = /*#__PURE__*/(() => {\n  class PerfilPacienteComponent {\n    constructor(userService, fb) {\n      this.userService = userService;\n      this.fb = fb;\n      this.contraseñasIguales = true;\n      this.emailExiste = false;\n    }\n\n    get emailField() {\n      return this.profileForm.get('email');\n    }\n\n    get passwordField() {\n      return this.profileForm.get('password');\n    }\n\n    get password2Field() {\n      return this.profileForm.get('password2');\n    }\n\n    get zonaField() {\n      return this.profileForm.get('zona');\n    }\n\n    ngOnInit() {\n      this.profileForm = this.fb.group({\n        //email: new FormControl({value: '', Validators: [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]}),\n        email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n        name: new FormControl({\n          value: '',\n          disabled: true\n        }),\n        lastname: new FormControl({\n          value: '',\n          disabled: true\n        }),\n        dni: new FormControl({\n          value: '',\n          disabled: true\n        }),\n        birth: new FormControl({\n          value: '',\n          disabled: true\n        }),\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        password2: ['', [Validators.required, Validators.minLength(6)]],\n        zona: new FormControl({\n          value: ''\n        })\n      }, {\n        validators: this.checkPassword('password', 'password2')\n      });\n      const id = localStorage.getItem('token') || '';\n      this.userService.checkUser(id).subscribe(data => {\n        this.pacienteActual = data, this.fillForm(data);\n      });\n    }\n\n    fillForm(data) {\n      if (data) {\n        this.profileForm.setValue({\n          email: data === null || data === void 0 ? void 0 : data.email,\n          name: data === null || data === void 0 ? void 0 : data.nombre,\n          lastname: data === null || data === void 0 ? void 0 : data.apellido,\n          dni: data === null || data === void 0 ? void 0 : data.dni,\n          birth: data === null || data === void 0 ? void 0 : data.fechaNacimiento,\n          password: data === null || data === void 0 ? void 0 : data.clave,\n          password2: data === null || data === void 0 ? void 0 : data.clave,\n          zona: data === null || data === void 0 ? void 0 : data.zona\n        });\n      }\n    }\n\n    submitForm() {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      const id = localStorage.getItem('token') || '';\n      this.emailExiste = false;\n      let paciente = {\n        id: this.pacienteActual.id,\n        token: this.pacienteActual.token,\n        completo_vacunas: this.pacienteActual.completo_vacunas,\n        email: (_a = this.emailField) === null || _a === void 0 ? void 0 : _a.value,\n        clave: (_b = this.passwordField) === null || _b === void 0 ? void 0 : _b.value,\n        nombre: ((_c = this.profileForm.get('name')) === null || _c === void 0 ? void 0 : _c.value) || '',\n        apellido: ((_d = this.profileForm.get('lastname')) === null || _d === void 0 ? void 0 : _d.value) || '',\n        dni: ((_e = this.profileForm.get('dni')) === null || _e === void 0 ? void 0 : _e.value) || '',\n        fechaNacimiento: (_f = this.profileForm.get('birth')) === null || _f === void 0 ? void 0 : _f.value,\n        zona: (_g = this.zonaField) === null || _g === void 0 ? void 0 : _g.value\n      };\n      this.userService.checkUser(paciente.email).subscribe({\n        next: user => {\n          if (user == null || user.email === id) {\n            this.userService.editarUsuario(paciente).subscribe({\n              next: data => console.log(data),\n              complete: () => console.log('se completo'),\n              error: error => console.log(error) // se ejecuta cuando la petición termina con errores.\n\n            });\n          } else {\n            this.emailExiste = true;\n          }\n        }\n      });\n    }\n\n    checkPassword(pass1, pass2) {\n      return control => {\n        var _a, _b;\n\n        const FormGroup = control;\n        const passs1 = (_a = FormGroup.get(pass1)) === null || _a === void 0 ? void 0 : _a.value;\n        const passs2 = (_b = FormGroup.get(pass2)) === null || _b === void 0 ? void 0 : _b.value;\n        if (passs1 === passs2) return null;else {\n          return {\n            password2: true\n          };\n        }\n      };\n    }\n\n  }\n\n  PerfilPacienteComponent.ɵfac = function PerfilPacienteComponent_Factory(t) {\n    return new (t || PerfilPacienteComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  PerfilPacienteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PerfilPacienteComponent,\n    selectors: [[\"app-perfil-paciente\"]],\n    decls: 63,\n    vars: 14,\n    consts: [[1, \"profile-form\", 3, \"formGroup\"], [\"appearance\", \"fill\", 1, \"profile-full-width\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"dni\"], [\"cellspacing\", \"0\", 1, \"profile-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"lastname\"], [\"matInput\", \"\", \"type\", \"date\", \"formControlName\", \"birth\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password2\", \"required\", \"\"], [\"formControlName\", \"zona\", \"required\", \"\"], [3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"]],\n    template: function PerfilPacienteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"p\")(2, \"mat-form-field\", 1)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵtemplate(6, PerfilPacienteComponent_mat_error_6_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(7, PerfilPacienteComponent_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtemplate(9, PerfilPacienteComponent_mat_hint_9_Template, 2, 0, \"mat-hint\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\")(11, \"mat-form-field\", 1)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"DNI\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"table\", 6)(16, \"tr\")(17, \"td\")(18, \"mat-form-field\", 1)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"td\")(23, \"mat-form-field\", 1)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Apellido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"p\")(28, \"mat-form-field\", 1)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Fecha de Nacimiento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"p\")(33, \"mat-form-field\", 1)(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 10);\n        i0.ɵɵtemplate(37, PerfilPacienteComponent_mat_error_37_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(38, PerfilPacienteComponent_mat_error_38_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"p\")(40, \"mat-form-field\", 1)(41, \"mat-label\");\n        i0.ɵɵtext(42, \"confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 11);\n        i0.ɵɵtemplate(44, PerfilPacienteComponent_mat_error_44_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(45, PerfilPacienteComponent_mat_error_45_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"p\");\n        i0.ɵɵtemplate(47, PerfilPacienteComponent_mat_hint_47_Template, 2, 0, \"mat-hint\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"p\")(49, \"mat-form-field\", 1)(50, \"mat-label\");\n        i0.ɵɵtext(51, \"Zona\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"mat-select\", 12)(53, \"mat-option\", 13);\n        i0.ɵɵtext(54, \" Zona 1 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"mat-option\", 13);\n        i0.ɵɵtext(56, \" Zona 2 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"mat-option\", 13);\n        i0.ɵɵtext(58, \" Zona 3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(59, PerfilPacienteComponent_mat_error_59_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(60, \"p\")(61, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function PerfilPacienteComponent_Template_button_click_61_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(62, \"Actualizar\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_6_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailField == null ? null : ctx.emailField.errors == null ? null : ctx.emailField.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailField == null ? null : ctx.emailField.errors == null ? null : ctx.emailField.errors.pattern);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailExiste);\n        i0.ɵɵadvance(28);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_4_0 = ctx.profileForm.get(\"password\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors.minLength));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordField == null ? null : ctx.passwordField.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_6_0 = ctx.profileForm.get(\"password2\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors.minLength));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordField == null ? null : ctx.passwordField.hasError(\"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.profileForm.errors == null ? null : ctx.profileForm.errors.password2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"value\", 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", 2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", 3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.zonaField == null ? null : ctx.zonaField.hasError(\"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.profileForm.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i4.MatError, i4.MatFormField, i4.MatHint, i4.MatLabel, i5.MatInput, i6.MatSelect, i7.MatOption],\n    styles: [\".profile-form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%}.profile-full-width[_ngcontent-%COMP%]{width:100%}td[_ngcontent-%COMP%]{padding-right:8px}\"]\n  });\n  return PerfilPacienteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}